<?php 

namespace Blog\Repository;

use Blog\Application;
use Doctrine\ORM\EntityRepository;

/**
 * EmployeeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmployeeRepository extends EntityRepository
{
	/**
	 * [findAllEmployees of a company]
	 * @return [array] [Employee object]
	 */
	public function findCompanyEmployees() 
	{
		$app = new Application();
		$results = $this->findAll();

		foreach($results as $result)
		{
			$company = $app['repository.company']->findCompanyById($result->getCompanyId());

			$employees[$result->getId()] = [
				'id' => $result->getId(),
				'firstName' => $result->getFirstName(),
				'lastName' => $result->getLastName(),
				'position' => $result->getposition(),
				'phone' => $result->getPhone(),
				'fax' => $result->getFax(),
				'email' => $result->getEmail(),
				'company' => $company
			];
		}
		return $employees;
	}

	/**
	 * Find employee by id
	 * @param  [integer] $id 
	 * @return [array] employee object
	 */
	public function findEmployeeById($id)
	{
		$app = new Application();
		$result = $this->findOneBy(['id' => $id]);

		if(!$result) {
			throw new \Exception("Employee not found");
		}

		$company = $app['repository.company']->findCompanyById($result->getCompanyId());

		$employee[$result->getId()] = [
			'id' => $result->getId(),
			'firstName' => $result->getFirstName(),
			'lastName' => $result->getLastName(),
			'position' => $result->getposition(),
			'phone' => $result->getPhone(),
			'fax' => $result->getFax(),
			'email' => $result->getEmail(),
			'company' => $company
		];
		return $employee; 
	}

	/**
	 * finds all employees of a company
	 * @param  [integer] $companyId 
	 * @return [array] employee objects
	 * @todo  Could be refactored as similar function is used in product repo
 	 */
	public function findEmployeesByCompanyId($companyId)
	{
		$app = new Application();
		$results = $this->createQueryBuilder('e')
			->select('e')
			->where('e.company = :company_id')
			->setParameter('company_id', $companyId)
			->getQuery()
			->getResult();
		
		foreach($results as $result) 
		{
			$employees[] = array(
				'id' => $result->getId(),
				'firstName' => $result->getFirstName(),
				'lastName' => $result->getLastName(),
				'position' => $result->getposition(),
				'phone' => $result->getPhone(),
				'fax' => $result->getFax(),
				'email' => $result->getEmail(),
			);
		}
		return $employees;
	}
}